<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxf.dao.ItemInfoMapper" >
  <resultMap id="BaseResultMap" type="com.xxf.model.ItemInfo" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="item_title" property="itemTitle" jdbcType="VARCHAR" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="item_type_id" property="itemTypeId" jdbcType="VARCHAR" />
    <result column="item_type_name" property="itemTypeName" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="is_remm" property="isRemm" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="spare_1" property="spare1" jdbcType="VARCHAR" />
    <result column="spare_2" property="spare2" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xxf.model.ItemInfo" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, item_title, summary, item_type_id, item_type_name, price, stock, is_remm, create_time, 
    update_time, spare_1, spare_2
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xxf.model.ItemInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from item_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xxf.model.ItemInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from item_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from item_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from item_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xxf.model.ItemInfoExample" >
    delete from item_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xxf.model.ItemInfo" >
    insert into item_info (id, item_title, summary, 
      item_type_id, item_type_name, price, 
      stock, is_remm, create_time, 
      update_time, spare_1, spare_2, 
      content)
    values (#{id,jdbcType=VARCHAR}, #{itemTitle,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, 
      #{itemTypeId,jdbcType=VARCHAR}, #{itemTypeName,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, 
      #{stock,jdbcType=INTEGER}, #{isRemm,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{spare1,jdbcType=VARCHAR}, #{spare2,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xxf.model.ItemInfo" >
    insert into item_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="itemTitle != null" >
        item_title,
      </if>
      <if test="summary != null" >
        summary,
      </if>
      <if test="itemTypeId != null" >
        item_type_id,
      </if>
      <if test="itemTypeName != null" >
        item_type_name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="isRemm != null" >
        is_remm,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="spare1 != null" >
        spare_1,
      </if>
      <if test="spare2 != null" >
        spare_2,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="itemTitle != null" >
        #{itemTitle,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="itemTypeId != null" >
        #{itemTypeId,jdbcType=VARCHAR},
      </if>
      <if test="itemTypeName != null" >
        #{itemTypeName,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="isRemm != null" >
        #{isRemm,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="spare1 != null" >
        #{spare1,jdbcType=VARCHAR},
      </if>
      <if test="spare2 != null" >
        #{spare2,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xxf.model.ItemInfoExample" resultType="java.lang.Integer" >
    select count(*) from item_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update item_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.itemTitle != null" >
        item_title = #{record.itemTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null" >
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.itemTypeId != null" >
        item_type_id = #{record.itemTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.itemTypeName != null" >
        item_type_name = #{record.itemTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.isRemm != null" >
        is_remm = #{record.isRemm,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.spare1 != null" >
        spare_1 = #{record.spare1,jdbcType=VARCHAR},
      </if>
      <if test="record.spare2 != null" >
        spare_2 = #{record.spare2,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update item_info
    set id = #{record.id,jdbcType=VARCHAR},
      item_title = #{record.itemTitle,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      item_type_id = #{record.itemTypeId,jdbcType=VARCHAR},
      item_type_name = #{record.itemTypeName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      stock = #{record.stock,jdbcType=INTEGER},
      is_remm = #{record.isRemm,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      spare_1 = #{record.spare1,jdbcType=VARCHAR},
      spare_2 = #{record.spare2,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update item_info
    set id = #{record.id,jdbcType=VARCHAR},
      item_title = #{record.itemTitle,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      item_type_id = #{record.itemTypeId,jdbcType=VARCHAR},
      item_type_name = #{record.itemTypeName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      stock = #{record.stock,jdbcType=INTEGER},
      is_remm = #{record.isRemm,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      spare_1 = #{record.spare1,jdbcType=VARCHAR},
      spare_2 = #{record.spare2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxf.model.ItemInfo" >
    update item_info
    <set >
      <if test="itemTitle != null" >
        item_title = #{itemTitle,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="itemTypeId != null" >
        item_type_id = #{itemTypeId,jdbcType=VARCHAR},
      </if>
      <if test="itemTypeName != null" >
        item_type_name = #{itemTypeName,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="isRemm != null" >
        is_remm = #{isRemm,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="spare1 != null" >
        spare_1 = #{spare1,jdbcType=VARCHAR},
      </if>
      <if test="spare2 != null" >
        spare_2 = #{spare2,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xxf.model.ItemInfo" >
    update item_info
    set item_title = #{itemTitle,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      item_type_id = #{itemTypeId,jdbcType=VARCHAR},
      item_type_name = #{itemTypeName,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      stock = #{stock,jdbcType=INTEGER},
      is_remm = #{isRemm,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      spare_1 = #{spare1,jdbcType=VARCHAR},
      spare_2 = #{spare2,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxf.model.ItemInfo" >
    update item_info
    set item_title = #{itemTitle,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      item_type_id = #{itemTypeId,jdbcType=VARCHAR},
      item_type_name = #{itemTypeName,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      stock = #{stock,jdbcType=INTEGER},
      is_remm = #{isRemm,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      spare_1 = #{spare1,jdbcType=VARCHAR},
      spare_2 = #{spare2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>